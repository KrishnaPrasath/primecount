primecount THANKS file

primecount has originally been written by Kim Walisch,
<kim.walisch@gmail.com>.

Many people have further contributed to primecount by reporting
problems, suggesting various improvements, or submitting actual code.
Here is a list of these people. Help me keep it complete and exempt
of errors.

* David Baugh suggested to implement standalone versions of the
  Deleglise-Rivat formulas (P2, S1, S2_trvial, S2_easy, S2_hard) which
  allows to distribute the computation of large pi(x) values on
  multiple systems. Using his idea I found a way to reduce the memory
  usage by up to 30 percent.

* Andrey Kulsha helped testing new primecount binaries.

* James F. King, Optimized Meissel-Lehmer sieve
  http://code.google.com/a/eclipselabs.org/p/meissel-lehmer-sieve/
  I used this implementation as a starting point for my implementation
  of the Lagarias-Miller-Odlyzko algorithm.

* Andrew Ohana suggested calculating phi(x, a) using binary search if
  x and a are small. Using this optimization my Legendre prime
  counting function runs 3 times faster!

* Dana Jacobsen implemented Legendre's, Meissel's and Lehmer's
  prime counting formulas a few months earlier than me:
  https://github.com/danaj/Math-Prime-Util/blob/master/lehmer.c
  I adopted Dana's idea to count primes using binary search in the
  P3(x, a) term (in Lehmer's formula).

* Christian Bau implemented the Lagarias-Miller-Odlyzko prime counting
  algorithm in 2003. Up until 2013 this was the only open source
  implementation of the Lagarias-Miller-Odlyzko algorithm! I studied
  his implementation in order to get mine working.
